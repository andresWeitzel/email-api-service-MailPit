services:
  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit-container
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-container
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-container
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - app-network
    depends_on:
      - prometheus

  # Comentado para desarrollo local - ejecutar la app Spring Boot localmente
  # springboot-app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: springboot-app-container
  #   depends_on:
  #     - postgres
  #     - mailpit
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
  #     SPRING_DATASOURCE_USERNAME: user
  #     SPRING_DATASOURCE_PASSWORD: password
  #     SPRING_MAIL_HOST: mailpit
  #     SPRING_MAIL_PORT: 1025
  #   networks:
  #     - app-network
  #   restart: always

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
